{
  "version": 1,
  "projects": {
    "ionic-react": {
      "root": "libs/ionic-react",
      "sourceRoot": "libs/ionic-react/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/ionic-react/tsconfig.lib.json",
              "libs/ionic-react/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/ionic-react/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/ionic-react/jest.config.js",
            "tsConfig": "libs/ionic-react/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/ionic-react",
            "tsConfig": "libs/ionic-react/tsconfig.lib.json",
            "packageJson": "libs/ionic-react/package.json",
            "main": "libs/ionic-react/src/index.ts",
            "assets": [
              "libs/ionic-react/*.md",
              {
                "input": "./libs/ionic-react/src",
                "glob": "**/*.!(ts)",
                "output": "./src"
              },
              {
                "input": "./libs/ionic-react",
                "glob": "collection.json",
                "output": "."
              },
              {
                "input": "./libs/ionic-react",
                "glob": "builders.json",
                "output": "."
              },
              {
                "input": "./libs/ionic-react",
                "glob": "migrations.json",
                "output": "."
              }
            ]
          }
        }
      }
    },
    "ionic-react-e2e": {
      "projectType": "application",
      "root": "apps/ionic-react-e2e",
      "sourceRoot": "apps/ionic-react-e2e/src",
      "architect": {
        "e2e": {
          "builder": "@nrwl/nx-plugin:e2e",
          "options": {
            "target": "ionic-react:build",
            "npmPackageName": "@nxtend/ionic-react",
            "pluginOutputPath": "dist/libs/ionic-react",
            "jestConfig": "apps/ionic-react-e2e/jest.config.js",
            "tsSpecConfig": "apps/ionic-react-e2e/tsconfig.spec.json"
          }
        }
      }
    },
    "docs": {
      "projectType": "application",
      "root": "apps/docs",
      "sourceRoot": "apps/docs/src",
      "architect": {
        "serve": {
          "builder": "@nx-plus/docusaurus:docusaurus",
          "options": {
            "port": 4200
          }
        },
        "build": {
          "builder": "@nx-plus/docusaurus:build-docusaurus",
          "options": {
            "outputPath": "dist/apps/docs"
          }
        }
      }
    },
    "capacitor": {
      "root": "libs/capacitor",
      "sourceRoot": "libs/capacitor/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/capacitor/.eslintrc",
            "tsConfig": [
              "libs/capacitor/tsconfig.lib.json",
              "libs/capacitor/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/capacitor/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/capacitor/jest.config.js",
            "tsConfig": "libs/capacitor/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/capacitor",
            "tsConfig": "libs/capacitor/tsconfig.lib.json",
            "packageJson": "libs/capacitor/package.json",
            "main": "libs/capacitor/src/index.ts",
            "assets": [
              "libs/capacitor/*.md",
              {
                "input": "./libs/capacitor/src",
                "glob": "**/*.!(ts)",
                "output": "./src"
              },
              {
                "input": "./libs/capacitor",
                "glob": "collection.json",
                "output": "."
              },
              {
                "input": "./libs/capacitor",
                "glob": "builders.json",
                "output": "."
              }
            ]
          }
        }
      }
    },
    "capacitor-e2e": {
      "projectType": "application",
      "root": "apps/capacitor-e2e",
      "sourceRoot": "apps/capacitor-e2e/src",
      "architect": {
        "e2e": {
          "builder": "@nrwl/nx-plugin:e2e",
          "options": {
            "target": "capacitor:build",
            "npmPackageName": "@nxtend/capacitor",
            "pluginOutputPath": "dist/libs/capacitor",
            "jestConfig": "apps/capacitor-e2e/jest.config.js",
            "tsSpecConfig": "apps/capacitor-e2e/tsconfig.spec.json"
          }
        }
      }
    },
    "devto": {
      "root": "libs/devto",
      "sourceRoot": "libs/devto/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/devto/tsconfig.lib.json",
              "libs/devto/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/devto/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/devto/jest.config.js",
            "tsConfig": "libs/devto/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/devto",
            "tsConfig": "libs/devto/tsconfig.lib.json",
            "packageJson": "libs/devto/package.json",
            "main": "libs/devto/src/index.ts",
            "assets": [
              "libs/devto/*.md",
              {
                "input": "./libs/devto/src",
                "glob": "**/*.!(ts)",
                "output": "./src"
              },
              {
                "input": "./libs/devto",
                "glob": "collection.json",
                "output": "."
              },
              {
                "input": "./libs/devto",
                "glob": "builders.json",
                "output": "."
              }
            ]
          }
        }
      }
    },
    "devto-e2e": {
      "projectType": "application",
      "root": "apps/devto-e2e",
      "sourceRoot": "apps/devto-e2e/src",
      "architect": {
        "e2e": {
          "builder": "@nrwl/nx-plugin:e2e",
          "options": {
            "target": "devto:build",
            "npmPackageName": "@nxtend/devto",
            "pluginOutputPath": "dist/libs/devto",
            "jestConfig": "apps/devto-e2e/jest.config.js",
            "tsSpecConfig": "apps/devto-e2e/tsconfig.spec.json"
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/nx-plugin"
  },
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/react": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/next": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/web": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/nx-plugin": {
      "plugin": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      }
    }
  }
}
